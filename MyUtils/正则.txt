https://juejin.im/post/5d245d4151882555300feb77#heading-1

正则在线测试：
	https://www.runoob.com/regexp/regexp-syntax.html
	
例子：
	
    public static void main( String[] args ) {
        String words = "hello java，hello php";
        String newStr = words.replaceAll("h.*?o","你好");//非贪婪
        System.out.println(newStr);    // 输出：你好 java,你好 php
    }
	
	替换具体字符串：
		String newStr = words.replaceAll("hello","你好");//输出：你好 java，你好 php

	替换单个字符：
		String newStr = words.replaceAll("o","你好");//输出：hell你好 java，hell你好 php
	html内容替换：
		https://blog.csdn.net/qq_35008624/article/details/95046932
		贪婪
		 String regEx_html = "<[^>]+>"; //定义HTML标签的正则表达式
		 String regEx_special = "\\&[a-zA-Z]{1,10};";// 定义一些特殊字符的正则表达式 如：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp
		例：
		    public static void main( String[] args ) {
			   String  htmlStr= "[{\"填写人\":\"系统测试员\",\"填写时间\":\"2020年04月17日\",\"意见内容\":\"<p>\\n\\t放散阀<span style=\\\"font-size:14px;\\\">放散阀</span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\">fsfs</span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\"><br />\\n</span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\">放散阀<span style=\\\"font-size:24px;\\\">放散阀</span><br />\\n</span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\"><span style=\\\"font-size:24px;\\\"><br />\\n</span></span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\"><span style=\\\"font-size:24px;\\\">放松放松地方&nbsp; &nbsp;1 1放松放松附&nbsp; 11</span></span>\\n</p>\\n<p>\\n\\t<span style=\\\"font-size:14px;\\\"><span style=\\\"font-size:24px;\\\">范德萨发</span></span>\\n</p>\"}]\n";
				String regEx_html = "<[^>]+>";
			   String regEx_special = "\\&[a-zA-Z]{1,10};";
				htmlStr = htmlStr.replaceAll(regEx_html,"");
				htmlStr = htmlStr.replaceAll(regEx_special,"");
				htmlStr = htmlStr.replace("\\n", "");
				htmlStr = htmlStr.replace("\\t", "");
				System.out.println(htmlStr);    
			}
	正则查找：
		https://www.runoob.com/java/java-regular-expressions.html
		https://blog.csdn.net/weixin_42868638/article/details/82721489
		Pattern pattern = Pattern.compile("Java");
		String test = "123Java456";

		Matcher matcher = pattern.matcher(test);
		matcher.find();
		System.out.println(matcher.start());//返回3
		System.out.println(matcher.end());//返回7
		System.out.println(matcher.group());//返回Java
js：
	https://www.cnblogs.com/moqiutao/p/6513628.html
	例：
		var regular = /\d{3}-\d{8}|\d{4}-\d{7}/;
		regular.test("0341-86091234");

	RegExp 对象有 3 个方法：
		test()
			test() 方法检索字符串中的指定值。返回值是 true 或 false。
		exec() 
			exec() 方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回 null。
		compile()
			...
	正则替换：
		var str='aab,《5455》《5455》bcc,a,a';
		var reg=/《.*?》/;
		str=str.replace(reg,';');
		？规则写在两个斜杆中吗