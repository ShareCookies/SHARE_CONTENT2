日期对象：
	var now = new Date(); //当前日期
	常用函数：
		var nowDayOfWeek = now.getDay(); //今天本周的第几天
		var nowDay = now.getDate(); //当前日
		var nowMonth = now.getMonth(); //当前月
		var nowYear = now.getYear(); //当前年
			nowYear += (nowYear < 2000) ? 1900 : 0;	
		
		setDate() 设置日期对象为当前月的那一天：		
			可以用来进行日期天数的加减：
				var d = new Date()
				d.setDate(20);console.log(d);//当前月的第20号
				d.setDate(50);console.log(d);//下个月的第20号
	附：
		js中使用new Date(str)创建时间对象不兼容firefox和ie的解决方式
			https://blog.csdn.net/weixin_34242331/article/details/94708413
日期格式化：
	https://www.cnblogs.com/shiyi2014/p/12674154.html
	Date.prototype.format = function (fmt) {
		var o = {
			"M+": this.getMonth() + 1, //月份
			"d+": this.getDate(), //日
			"h+": this.getHours(), //小时
			"m+": this.getMinutes(), //分
			"s+": this.getSeconds(), //秒
			"q+": Math.floor((this.getMonth() + 3) / 3), //季度
			"S": this.getMilliseconds() //毫秒
		};
		if (/(y+)/.test(fmt)) {
			fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
		}
		for (var k in o) {
			if (new RegExp("(" + k + ")").test(fmt)) {
				fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
			}
		}
		return fmt;
	}
	new Date().format("yyyy-MM-dd hh:mm:ss");