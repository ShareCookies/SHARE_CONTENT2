js数组：
	介绍：
		1.js数组本质是对象，因此其包含有大量方法。
		2.JS的数组长度是动态可变的，所以可在任意位置增删值。
		3.JS数组可以存放任意类型。var array=[1,'str',true,{}];
		
	数组定义：
		var arr = [];//定义一个空数组，推荐
		var arr = [1,2,3];//定义一个带元素的数组
		var arr = new Array();//定义一个空数组，啰嗦
		var arr = new Array(5);//定义一个长度为5的数组，不建议
		
		判断是否是数组：
	

		判断是否是数组：
			https://www.cnblogs.com/ysk123/p/9995920.html
			例：
				1. 	arr instanceof Array 
				2. 
					if (readers && Object.prototype.toString.call([1])== '[object Array]'){
		
					}
			instanceof：
				介绍：
					instanceof是Java、php、js的一个二元操作符（运算符），和==，>，<是同一类东西。
					由于它是由字母组成的，所以也是Java的保留关键字。
				作用：它的作用是判断其左边对象是否为其右边类的实例，返回boolean类型的数据。
				？
					可以用来判断继承中的子类的实例是否为父类的实现。
	遍历数组：
		var i,myArr = [1,2,3];
		1.
			for (var i = 0; i < myArr.length; i++) {
				console.log(i+":"+myArr[i]);
			};
		2.forEach() 方法
			例：本页的变量方法章节
		注：
			new Object(), Array(), Number(),Boolean(), Date()...均是js自带对象
		附：
			是否包含：var aa= ["2","4"];aa.includes("4");
	数组添加元素：
		1.结尾添加
			数组.push(元素)
		2.头部添加unshift() 
		3.splice() 
			向数组中添加/删除项目。
			splice() 方法会直接对数组进行修改。
			删除：
				let buttonsArray = [1,2];
				buttonsArray.splice(i, 1);
			注：
				1.forEach时使用splice容易出现问题:
					https://www.cnblogs.com/this-xiaoming/p/9488504.html
					建议使用.filter
					例：
						1.返回满足条件的数,并未修改原数组
						2.return true 则返回该item，返回false则不会。
						let newArray = myArr.filter(item=> {
							if(item ===2 ){
								return true;
 							}
						});
						//myArr.filter(item=> item===2);
				2.跳出循环：
					forEach无法跳出循环，除非直接抛异常，
					所以建议使用for和break，
					或filter。

		4.合并数组
		注：
			concat() 方法用于连接两个或多个数组。
			arr.concat(arr2,arr3) 该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。
	数组删除元素：
		var fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.splice(2,1);
		console.log(fruits);
		语法
			array.splice(index,howmany,item1,.....,itemX)
		参数
			index	
				必需。规定从何处添加/删除元素。
				该参数是开始插入和（或）删除的数组元素的下标，必须是数字。
			howmany	
				可选。规定应该删除多少元素。必须是数字，但可以是 "0"。
				如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。
	注：
		1.在console中获取到HTMLCollection[]，
		[]中无值但在dom调试界面中又能看到集合值，
		这是dom结构未加载完全，要完全加载完成之后才能操作。