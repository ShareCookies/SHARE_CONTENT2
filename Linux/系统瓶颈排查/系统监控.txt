为什么监控：
	1. 为了系统的稳定性，提前预警等
	2. 便于排查异常和收集信息
监控：
	监控大致分类：
		根据监控的内容不同，监控大致可分为，
		系统的指标监控、业务监控。
	常见的运维监控工具：
		goto: 6.1.1 常见的运维监控工具
prometheus-监控系统指标
	https://www.zhihu.com/question/27075747
	Prometheus（普罗米修斯）做监控和告警。
	
	prometheus架构图：
		https://pic1.zhimg.com/80/v2-45af1f5290ab3413068bf73b8e813123_720w.webp?source=1940ef5c
		总体而言，prometheus的核心是在于Server，我们要接入prometheus的话，实际上就是开放接口给prometheus拉取数据，然后在web-ui下配置图形化界面进而实现监控的功能。
		
	prometheus环境搭建:
		prometheus的环境搭建:
			...
			
			1. 安装包的拉取：
				dockers：-这里拉取的docker镜像分别有：
					cadvisor 用于获取docker容器的指标
					node-exporter 用户获取服务器的指标
					grafana 监控的web-ui好用的可视化组件
					alertmanager 告警组件（目前暂未用到)
					prometheus 核心监控组件
			2. prometheus的环境配置：
				prometheus.yml:
					...
					新建prometheus的配置文件prometheus.yml(这份配置其实就是告诉prometheus要去哪个端口中拉取对应的监控数据)
			3.服务的启动：
				dockers：
					随后在目录下docker-compose up -d启动，一个docker-compose起了5个服务器，真好使！
					
					于是我们就可以分别访问：
						http://ip:9100/metrics( 查看服务器的指标)
						http://ip:8899/metrics（查看docker容器的指标）
						http://ip:9090/(prometheus的原生web-ui)
						http://ip:3000/(Grafana开源的监控可视化组件页面)
			附：4. web-ui的配置：-Grafana配置监控
				...
			5、Java系统指标
				Java程序的JVM相关的监控得支棱起来
				1. 配置Java的监控:	
					1. 配置Java的监控也特别简单，只要我们在项目中多引入两个pom依赖（SpringBoot自带的监控组件actuator）
					2. yml加上actuator对应的配置，并且可以让prometheus拉取配置
					...
				2. 让prometheus采集到Java应用的数据
					...
			附：06、压测
				actutor监控的http是什么来着？
				prometheus显然数据是有明显的波动的，而数据貌似跟我们压测的对不太上？
				在我个人的理解下：prometheus是每隔N秒（可配置）去拉取暴露的数据，而在界面上配置的可视化也是按N秒（可配置）去执行一次Query。
				基于这种架构下，我们是很难得出某一时刻（秒）对应的数值。所以在prometheus体系下，它只能看到一个时间段内的值，这对于QPS和RT这些指标并不太友好。
			7告警
				alertmanager 告警组件的集成？
elk-业务指标监控
	业务监控就是指业务日志。
	从上面我配置了docker的监控、服务器的监控、SpringBoot应用程序的监控。但可以发现的是，这大多数都是系统的指标监控。
	我们也是可以实现自定义指标监控给到prometheus进行采集的，但如果系统本身如果接入了类ELK的系统，那我们更偏向于把业务指标数据在ELK上做掉。
	毕竟ELK面向的是日志数据，只要我们记录下了日志就可以把日志数据清洗出来做业务指标面板监控。

附：
	druid是属于系统监控吧，是阿里数据库连接池附带的一个监控功能，并不是完全为监控开发的。
	当然其数据应该可以到监控平台里，因为其sql等监控还是很有价值的。



附：
6.1 运维监控平台选型以及设计思路

6.1.1 常见的运维监控工具
	现在运维监控工具非常多，只有了解了它们的特性才能知道如何进行选择。
	3．Zabbix
		Zabbix是一个基于Web界面的提供分布式系统监视以及网络监视功能的企业级开源解决方案。
		Zabbix能监视各种网络参数，保证服务器系统的安全运营；并提供强大的通知机制以让系统运维人员快速定位/解决存在的各种问题。
		Zabbix由两部分构成，Zabbix server与可选组件Zabbix agent。Zabbix server可以通过SNMP、Zabbix agent、ping、端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能。它可以运行在Linux、Solaris、HP-UX、AIX、Free BSD、Open BSD、OS X等平台上。
		Zabbix解决了Cacti没有告警的不足，也解决了Nagios不能通过Web配置的缺点，同时还支持分布式部署，这使得它迅速流行起来，Zabbix也成为目前中小企业监控最流行的运维监控平台。
		当然，Zabbix也有不足之处，它消耗的资源比较多，如果监控的主机非常多时，可能会出现监控超时、告警超时等现象。不过也有很多解决办法，例如，提高硬件性能、改变Zabbix监控模式等。
	6．Prometheus
		Prometheus是一套开源的系统监控告警框架，它既适用于面向服务器等硬件指标的监控，也适用于高动态的面向服务架构的监控。
		对于现在流行的微服务，Prometheus的多维度数据收集和数据筛选查询语言也非常强大。Prometheus是为服务的可靠性而设计的，当服务出现故障时，它可以使运维人员快速定位和诊断问题。
	Prometheus和Zabbix的对比
		https://blog.csdn.net/u011487470/article/details/123473281
	7．Grafana
		Grafana是一个开源的度量分析与可视化套件。通俗地说，Grafana就是一个图形可视化展示平台，它通过各种炫酷的界面效果展示监控数据。如果觉得Zabbix的出图界面不够好看，不够高端大气上档次，就可以使用Grafana的可视化展示。Grafana支持许多不同的数据源，Graphite、InfluxDB、OpenTSDB、Prometheus、Elasticsearch、CloudWatch和KairosDB都可以完美支持。
6.1.2 运维监控平台设计思路
	...

6.1.3 企业运维监控平台选型策略
	1．中小企业监控平台选择Zabbix
		Zabbix是一款综合了数据收集、数据展示、数据提取、监控告警配置和用户展示等方面的一款综合运维监控平台。
		Zabbix学习入门较快，功能也很强大，是一个可以迅速上手的监控软件，能够满足中小企业（服务器数500台一下）的监控告警需求，因此是中小型企业运维监控的首选平台。
		但是，Zabbix当监控服务器数量较多时，会产生很多问题，如监控数据不准确、告警超时等问题。这是因为Zabbix对服务器性能要求较高，当监控的服务器数量超过500台后，监控性能急剧下降，此时需要进行分布式监控部署，并且需要提升监控服务器的性能。
	2．互联网大企业监控平台选择Ganglia+Centreon
		对于有海量服务器、多业务系统的复杂监控，没有哪个软件能独立完成企业的所有监控需求，因此，多种开源监控软件组合应用+二次开发才是监控平台的最终方向。
		推荐Ganglia是因为Ganglia客户端软件对服务资源占用非常低，并且扩展插件非常多，监控扩展也非常容易，结合专业的Web监控平台Centreon，可以实现在数据收集、数据展示、数据提取、监控告警配置、用户展示等方面的完美配合。因此这里对海量服务器进行监控推荐Ganglia+Centreon组合。
6.1.4 运维监控平台演变历程
	...
	（3）告警需求监控系统无法满足
		随着业务的增加，客户对业务稳定性要求变得更加苛刻，为了保证业务系统稳定运行，业务逻辑监控需求被提出来了。
		通过提高业务逻辑接口、汇报数据等方式，笔者对Zabbix进行了多项二次开发，以满足对业务逻辑的监控。