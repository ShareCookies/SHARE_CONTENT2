有根树的表示:
	附：
		上一节介绍的表示链表的方法可以推广到任意同构的数据结构上。本节中，我们专门讨论用链式数据结构表示有根树的问题。
		本章树的结点用对象表示，与链表类似，假设每个结点都含有一个关键字key，其余我们感兴趣的属性包括指向其他结点的指针，它们随树的种类不同会有所变化。
		！
			为什么算链表结构了，因为是该章中的树构成都是通过，一个节点通过指针连接向其余节点，个个相连构成了树。
			附：
				树的其他表示方法
					我们有时也用其他方法表示有根树。例如在第6章中，我们对- -棵完全二叉树使用堆来表
					示，堆用一个单数组加上堆的最末结点的下标表示。第21章中的树只需向根结点方向遍历，因
					此只需提供父结点的指针，而没有指向孩子结点的指针。还有许多其他的表示方法。哪种方法最
					优取决于具体应用。

	二叉树：
		节点中有左右孩子的树。
		二叉树利用属性p、left和right存放指向父结点、左孩子和右孩子的指针。
		结点介绍：
			如果x.p=NIL，则x是根结点。
			如果结点x没有左孩子，则x.left=NIL，右孩子的情况与此类似。
			如果T.root=NIL，则该树为空。
		例：
			图10-9展示了二叉树T中如何利用属性p、left和right存放指向父结点、左孩子和右孩子的指针。
			./imgs/二叉树.png
	分支无限制的有根树：
		背景：(分支有限制的有根树)
			二叉树的表示方法可以推广到每个结点的孩子数至多为常数k的任意类型的树，只需要将left和right属性用child1，child2，…，childk代替。
			当孩子的结点数无限制时，这种方法就失效了，因为我们不知道应当预先分配多少个属性(在多数组表示法中就是多少个数组)。
			此外，即使孩子数k限制在一个大的常数以内，但若多数结点只有少量的孩子，则会浪费大量存储空间。
		
		介绍：
			所幸的是，有一个巧妙的方法可以用来表示孩子数任意的树。
			该方法的优势在于，对任意n个结点的有根树，只需要O(n)的存储空间。
			就是左孩子右兄弟表示法。

		左孩子右兄弟表示法(left-child，right-sibling representation):	
			实现思路：
				元素属性作用介绍：
					节点包含3个指针:
					1. 每个结点都包含一个父结点指针p。
					2. x.left-child指向结点x最左边的孩子结点。
					3. x.right-sibling指向x右侧相邻的兄弟结点。

				节点介绍：
					T.root指向树T的根结点。
					如果结点x没有孩子结点，则x.left-child=NIL;
					如果结点x是其父结点的最右孩子，则x.right-sibling=NIL;
	
			例：
				./imgs/分支无限制的有根树.png

								
