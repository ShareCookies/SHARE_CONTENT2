快速排序算法：
	概念：
		快速排序的基本思想是，通过一轮的排序将序列分割成独立的两部分，其中一部分序列的关键字（这里主要用值来表示）均比另一部分关键字小。
		然后继续对长度较短的序列进行同样的分割，最后到达整体有序。
		优势：在排序过程中，由于已经分开的两部分的元素不需要进行比较，故减少了比较次数，降低了排序时间。
	介绍：
		与归并排序一样，快速排序也使用了2.3. 1节介绍的分治思想。
		对A[p..r]进行快速排序的三步分治过程:
			1. 分解:
				数组A[p..r]被划分为两个(可能为空)子数组A[p..q-1]和A[q+1..r]，使得A[p..q- 1]中的每一个元素都小于等于A[q]，而A[q]也小于等于A[q+1..r]中的每个元素。
				其中，计算下标q也是划分过程的一部分。
			2. 解决:
				通过递归调用快速排序，对子数组A[p..q-1]和A[q+1..r]进行排序。
			3. 合并:
				因为子数组都是原址排序的，所以不需要合并操作:数组A[p.. r]已经有序。
			例：
				QUICKSORT(A, p，r)
					if p< r
						q= PARTITION(A，p, r)
						QUICKSORT(A, p, q-1)
						QUICKSORT(A, q+ 1, r)
				完整案例：
					./例/排序/QuickSort2.java
	效率：
		...
		p97 pdf112