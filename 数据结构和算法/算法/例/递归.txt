递归算法：
	https://blog.csdn.net/sinat_38052999/article/details/73303111
	概念：直接或者间接不断反复调用自身来达到解决问题的方法。
	介绍：
		递归，顾名思义，其包含了两个意思：递 和 归，这正是递归思想的精华所在。
		有去”是指：递归问题必须可以分解为若干个规模较小，与原问题形式相同的子问题，这些子问题可以用相同的解题思路来解决。
		有回”是指 : 这些问题的演化过程是一个从大到小的过程，并且有一个明确的终点(临界点)，
		一旦到达了这个临界点，就不用再往更小、更远的地方走下去。
		最后，从这个临界点开始，原路返回到原点，原问题解决。　　
	示例：	
		题：用递归求第10个数，它等于前2数之和，如{1，1，2，3，5}
		解：
			理解：
				 f0 = 1; f1 = 1; fn = f(n-1) + f(n - 2) （n >= 2）
			public class FibonacciSequence {
				public static void main(String[] args){
					System.out.println(Fribonacci(9));

				}
				public static int Fribonacci(int n){
					if(n<2)//终止条件，归
						return 1;
					else
						return Fribonacci(n-1)+Fribonacci(n-2);//解决思路相同的子问题，递
				}
			}	