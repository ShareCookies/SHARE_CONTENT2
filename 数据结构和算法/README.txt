数据结构与算法：
	数据结构的一般定义:
		是指相互之间存在着一种或多种关系的数据元素的集合(集合中数据元素之间的关系组成)。
		附：
			1.数据元素之间存在的关系，分为逻辑结构(逻辑关系)和存储结构(存储关系)。 
				
			...数据结构重要性:
					算法我们可能还接触少，但数据结构却不是，
					如域对象设计时，域对象直接就经常设计到逻辑关系，就像一个督察可能会关系到多个任务。
					所以数据结构的设计要慎重，因为其一旦定下来在变动就耗时麻烦等。
						如你要修一座房子，那么数据结构就是你的地基，地基不稳，如何建造高楼大厦。
			2.关于数据结构这个概念，至今尚未有一个公认的定义，不同的人使用这个词时所表达的意思有所不同。
		
		人可以随心所欲的交换这些数据元素，或者查找某个元素，机器可不会，机器需要你明确的指令，那么你所使用的数据结构类型以及算法的设计，就是最为关键的部分。
		
	什么是算法：	
		算法是程序的抽象逻辑，是解决某类客观问题的数学过程。
			或算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。
	注：
		数据结构与算法是不可分割的一家人，数据结构解决了数据存储问题，而算法对数据进行处理与分析。

为什么要学习数据结构和算法了：
	各应用和api都是使用了数据结构和算法实现的，所以如果你理解了算法和数据结构，那么你就可以较容易对这些应用上手，了解其特性
		如mysql的innodedb索引是基于b树，那么其最左，和其余一些索引特性和优化规则就可以很容易理解了。
	附：
		排序算法为什么重要了，1.排序是最常接触到的应用场景 2. 很多算法的前置算法都是排序，只有先排序了才能进行后续步骤。
如何学习数据结构和算法了：
	1. 推荐与实践相结合，明白为什么要学，然后才会有动力去学。
	比如mysql的innodedb索引是基于b树
	2. 日常睡前看一些，先了解些有个印象，因为有些算法和结构是有前置内容的。
	如果不了解，就会体会到书到用时方恨少。

附：
	学习算法与数据结构的意义：
		IT行业一直流传着一句名言，“程序设计=算法+数据结构”，那么数据结构与算法在程序开发中的重要性也就不言而喻了。

		在任何开发过程你都无法避免数据结构与算法，可能你想说现在开发不都是利用已封装好的类库、接口来翻译业务逻辑就好了，这的确是一个非常便捷高效的方法。
		1.：（一个合格的开发）
			然而很多第三方框架内部都用到了大量的数据结构与算法的知识，你如何高效的去利用好第三方框架、把框架的价值发挥到最大也是一个值得思考的问题，这个时候如果你擅长数据结构与算法，对于理解框架的底层原理，势必是事半功倍。
		2.：（一个优秀的开发）：
			并且我们也不能仅仅满足于第三方框架的使用，我想一个有追求的程序员怎能只甘心于不加思考的调用别人写好的库，不是应该拥有自己的开发思想和逻辑吗？甚至是写出更优秀的框架能够供其他开发者使用，那么对数据结构与算法的融会贯通就是你的第一步！
		
		https://www.jianshu.com/p/09718896d1c1