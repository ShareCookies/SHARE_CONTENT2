大部分是HEAD FISRST 设计模式的读书笔记。

设计模式：
	介绍：
		设计模式即构建oo系统经验的总结和复用。
			hcg:
				那人们是如何进行总结的了。
				1.找出代码中变的与不变的部分。然后把变的部分的提取出来。
				
		设计模式告诉我们如何组织类和对象以解决某种问题。
	设计模式作用：
		设计模式可以帮助我们将应用组织成容易了解，容易维护，具有弹性的架构。
	使用模式的最好方式：
		把模式装进脑子里，然后在你的设计和已有的应用中，寻找何处可以使用它们。
	
库,框架，架构：
	？
	库和框架提供了我们某种特定的实现，让我们的代码可以轻易的引用。
	架构：
		为应用搭建一个骨架，然后后续只需填充这个骨架即可实现该应用。
	注：
		库或框架中会使用到设计模式
软件开发的不变真理：
	不管当初软件设计的多好，一段时间之后，总会需要成长与改变，否则软件就会死亡。
	即：
		软件的维护和二次开发。
OO基础：
	抽象
	封装
	多态
		!
	继承
设计原则：
	1.找出应用中可能需要变化之处，把他们独立出来，不要和那些不需要变化的代码混在一起。
		如：
			把会变化的部分封装起来，以便以后可以轻易的改动或扩充此部分，而不影响不需要变化的其他部分。？
	2.针对接口编程，而不是针对实现编程。
		这样子会是设计更有弹性。
		如：
			类中有一个接口属性。
		好处：
			针对接口编程，可以隔离以后系统发生的一大堆改变。
			因为代码如果针对接口写的，那么通过多态，它可以让任何新类实现该接口。
	3.多用组合少用继承。
		将两个类结合起来使用就是组合。
		例:
			每个鸭子都有个FlyBehavior和QuackBehavior，好将飞行和叫行为委托它们代为处理。
	4.开放-关闭原则
		类应该对扩展开放，对修改关闭。
		即：
			即允许类容易扩展，能在不修改现有代码的情况下，就可扩展新的行为。
		什么时候应用该原则：
			遵循开放关闭原则，通常会引入新的抽象层次，增加代码的复杂度。
			你应该把注意力集中在设计中最有可能改变的地方，然后应用开放关闭原则。
	5.为交互对想直接的松耦合设计而努力：？
		装饰者中章节为啥会提到这个原则
		
软件改进：
	1.：
		软件开发完成前，以及完成后，何者需要花费更多时间。
		答案是后，因为我们总是需要花费许多时间在系统的维护和变化上，比原先开发花的时间更多。
		所以我们应该致力于提高可维护性和可扩展性上的复用程度。
	2.找不到符合的设计模式：p31
		