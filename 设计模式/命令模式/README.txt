命令模式：
	定义：
		命令模式将"请求"封装成对象,以便使用不同的请求、队列或者日志来参数化其他对象。命令模式也支持可撤销的操作。
		hcg：
			通过一个统一的请求来达到不同的目的。（通过启动命令达到开启风扇，或可用来启动电视）
	例：
		./例/RemoteControlTest.java
		实现思路：
			定义一个命令对象接口，该接口仅暴露出一个execute()方法,当此方法被调用的时候（发起请求）,接收者就会执行一组动作。
			案例中将动作和接收者包进一个对象中，这个对象称为具体命令对象。
				./例/LightOnCommand.java
	命令模式作用：
		从外面来看,其他对象不知道究竟哪个接收者进行了哪些动作,只知道发起一个请求，然后对应的目的就能达到。
		附：
			这不是与外观模式的目的有点类似。
			不是，因为命令对象是能够通过一个请求，能达到一系列可替换的操作的。
			例如：我发起启动请求，能开启电风扇，替换后也可以达到开启电视功能。
			而外观模式仅是为了简化某些方法的调用，我称外观模式是定制化的简化。
		总结：
			*通过一个固定的请求，即可达成目的（这个目的是可以替换的）。
	附：
		命令模式的部分应用：
			队列请求.：
				一个工作队列:你在某一端添加命令对象,然后另一端则是线程。
				线程进行下面的动作:从队列中取出一个命令,调用它的execute()方法,等待这个调用完成,然后将此命令对象丢弃,再取出下一个命令…
			日志请求.