抽象工厂：
	定义：
		抽象工厂模式提供一个接口,用于创建相关或依赖对象的家族,而不需要明确指定具体类。
		
	例：
		1.抽象工厂定义一个接口，所有的具体工厂都必须实现此接口。
		（这个接口包含一组方法用来生产产品）
		注：
			用户使用抽象接口来创建一组相关的产品。
		
		2.不同的具体工厂实现不同的产品家族。
		
		3.
		不同的具体商店使用抽象工厂引用，
		（但引用是指向具体的工厂）
		来创建不同的产品。
	注：
		抽象工厂与工厂方法的区别：p159
		
		1.抽象工厂中有利用工厂方法来实现生产方法。
			因为抽象工厂定义一组产品接口，但由抽象工厂子类来提供这些方法具体做法。
		
		2.工厂都是用来创建对象的
			工厂方法:
				工厂方法是通过继承，来创建对象的。
			抽象工厂方法：
				抽象工厂方法是通过对象的组合，来创建对象的。
		3.用途
			当你需要创建产品家族（或让相关的产品集合起来时）使用抽象工厂。
			当你想把客户代码从需要实例化的具体类中解耦时使用工厂方法。并且只需继承为子类并实现工厂方法就可以。
			