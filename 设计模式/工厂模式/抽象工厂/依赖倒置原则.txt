依赖倒置原则：
	要依赖抽象，不要依赖具体类。
	
	附：
		这个原则听起来很像是"针对接口编程,不针对实现编程"。
		然而这里更强调"抽象"。这个原则说明了:不能让高层组件依赖低层组件，而且,不管高层或低层组件,"两者"都应该 依赖于抽象。
		高层组件：
			高层组件，是由其他低层组件其行为的类。
			
	
	避免在OO设计中违反依赖倒置原则:
		变量不可以持有具体类的引用。			
			如果使用new、就会持有具体类的引用。你可以使用工厂来避开这样的做法。
		不要让类派生自具体类。
			如果派生自具体类,你就会依赖具体类。请派生自一个抽象（接口或抽象类）。 
		不要覆盖基类中已实现的方法。
			基类中已实现的方法,应该由所有的子类共享。
		注：
			尽量遵守该原则，因为如果一定遵守根本写不出一个java程序。