HTTP协议：
	https://www.cnblogs.com/an-wen/p/11180076.html
	Hyper Text Transfer Protocol 超文本传输协议，是一种用于分布式、协作式和超媒体信息系统的应用层协议。
	HTTP是万维网数据通信的基础。
	HTTP协议概述
		HTTP是一个客户端终端（用户）和服务器端（网站）请求和应答的标准（TCP）。
		通过使用网页浏览器、网络爬虫或者其它的工具，客户端发起一个HTTP请求到服务器上指定端口（默认端口为80）。我们称这个客户端为用户代理程序（user agent）。应答的服务器上存储着一些资源，比如HTML文件和图像。我们称这个应答服务器为源服务器（origin server）。在用户代理和源服务器中间可能存在多个“中间层”，比如代理服务器、网关或者隧道（tunnel）。
		注：
			尽管TCP/IP协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。
			事实上，HTTP可以在任何互联网协议上，或其他网络上实现。
			HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。

		通常，由HTTP客户端发起一个请求，创建一个到服务器指定端口（默认是80端口）的TCP连接。HTTP服务器则在那个端口监听客户端的请求。一旦收到请求，服务器会向客户端返回一个状态，比如"HTTP/1.1 200 OK"，以及返回的内容，如请求的文件、错误消息、或者其它信息。
	http工作原理：
		...
	附：
		Http协议的长度限制:
			https://www.cnblogs.com/ztiandan/archive/2013/04/16/3023758.html
		http与socket：
			http底层应该还是通过socket实现的。
			https://www.cnblogs.com/aspirant/p/11334957.html
			https://bbs.csdn.net/topics/390288261/



下面全是废话：
HTTP请求：
	https://www.cnblogs.com/yumo1627129/p/7941220.html
    HTTP请求是指 ： 客户端通过发送 HTTP 请求向服务器请求对资源的访问。

	请求和响应消息的头以ASCII码形式给出；而消息内容则具有一个类似MIME的格式。	
	它向服务器传递了一个数据块，也就是请求信息，HTTP 请求由三部分组成：请求行、请求头和请求正文。
	HTTP请求信息由3部分组成：
		（1）请求行：请求方法URI协议/版本
		请求的第一行是“方法 URL  协议/版本”，请求行以空格分隔，以换行（回车）作为结尾。
		例：
			GET /index.html HTTP/1.1
		
		（2）　请求头(Request Header)
			https://www.cnblogs.com/printN/p/6534529.html
			请求头包含许多有关的客户端环境和请求正文的有用信息。
			例如，请求头可以声明浏览器所用的语言，请求正文的长度等。例如：
			content-type：
				Http协议中，如果不指定Content-Type，则默认传递的参数就是application/x-www-form-urlencoded类型。
		（3）　请求正文
			请求头和请求正文之间是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。
	HTTP 请求分为三个部分：
		状态行
		headers 请求头
		entity-body 消息主体
		
		get , post 是在哪个部分？
		HTTP 请求方法：
			HTTP/1.1 协议规定的 HTTP 请求方法有
			OPTIONS、GET、HEAD、POST、PUT、DELETE、TRACE、CONNECT这几种。
			POST：
				1.HTTP协议规定 POST 提交的数据必须放在消息主体（entity-body）中，但并没有规定数据必须使用什么编码方式。
				解析：
					实际上，开发者完全可以自己决定消息主体的格式，只要最后发送的 HTTP 请求满足上面的格式就可以。
					但是，数据发送出去，还要服务端解析成功才有意义。
					一般服务端语言如 php、python 等，以及它们的 framework，都内置了自动解析常见数据格式的功能。
					服务端通常是根据请求头（headers）中的 Content-Type 字段来获知请求中的消息主体是用何种方式编码，再对主体进行解析。
					所以 POST 提交数据包含了 Content-Type 和消息主体编码方式两部分。
http请求与http协议：
	基于HTTP协议的客户/服务器模式的信息交换分四个过程：
		建立连接、发送请求信息、发送响应信息、关闭连接。
	所以http协议是一个数据传输的规范，http请求即使用http协议来传输数据。
	
	
	注：
		HTTP客户端发起一个请求，建立一个到服务器指定端口（默认是80端口）的TCP连接。
	
		HTTP连接需要客户端向服务器发出请求后，服务器端才能回复数据。
		
	HTTP协议和TCP协议：
		HTTP协议和TCP协议是不冲突的，HTTP在七层协议中的应用层工作，而TCP处理的是传输层的事务。HTTP使用TCP而不是UDP的原因在于（打开）一个网页必须传送很多数据，而TCP协议提供传输控制，按顺序组织数据，和错误纠正。HTTP协议的瓶颈及其优化技巧都是基于TCP协议本身的特性。如TCP建立连接时三次握手有1.5个RTT（round-trip time）的延迟，为了避免每次请求的都经历握手带来的延迟，应用层会选择不同策略的http长链接方案。又如TCP在建立连接的初期有慢启动（slow start）的特性，所以连接的重用总是比新建连接性能要好。

二进制请求协议：
	如java的socket

http协议与二进制协议？			
