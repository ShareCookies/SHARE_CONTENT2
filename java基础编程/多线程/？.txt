monitor对象监视器:？
	Monitor是在jvm底层实现的，底层代码是c++。Java中的每个对象都有一个监视器，来监测并发代码的重入。
	Monitor是实现Sychronized的基础。
	如果对象在非多线程编码时该监视器不发挥作用，反之如果对象在synchronized 范围内，监视器发挥作用。
	...
	怎么检测一个线程是否持有对象监视器？
多线程编程的建议：
	...
	1.对于公共资源
		优先使用并发容器而非同步容器.
		优先使用volatile
	2.使用多线程建议：
		给线程命名.！
		最小化同步范围.
		控制任务的执行顺序：！
			如果你必须控制任务执行的顺序,那么最好的押宝就是使用同步控制,
			或者在某些情况下，压根不使用线程，但是要编写自己的协作例程，这些例程将会按照指定的顺序在互相之间传递控制权。