线程本地存储作用：
	防止在共享资源上产生冲突的第二种方式是根除对变量的共享。
	线程本地存储是一种自动化机制，可以为使用相同变量的每个不同的线程都创建不同的存储。
	

线程本地存储：
	线程变量，是一个以ThreadLocal对象为键、任意对象为值的存储结构。
	这个结构被附带在线程上，也就是说一个线程可以根据一个ThreadLocal对象查询到绑定在这个 线程上的一个值。	
ThreadLocal：
	ThreadLocal类是用来管理线程本地存储的。
	！
	通过ThreadLocal类的set方法可以把变量插入当前线程的线程本地存储中，
	通过ThreadLocal类的get方法可以从当前线程的线程本地存储中取出变量。
	
	例：
		./案例/同步与通信/线程本地存储
	原理：？
		概要：
			ThreadLocal为每个线程维护一个本地变量。采用空间换时间，它用于线程间的数据隔离，为每一个使用该变量的线程提供一个副本，每个线程都可以独立地改变自己的副本，而不会和其他线程的副本冲突。
			ThreadLocal类中维护一个Map，用于存储每一个线程的变量副本，Map中元素的键为线程对象，而值为对应线程的变量副本。
		./线程本地存储原理.txt