原子类:
	Java SE5引入了诸如AtomicInteger、AtomicReference等13个特殊的原子性变量类。
	这些类被调整为可以使用在某些现代处理器上的可获得的，并且是在机器级别上的原子性。
	对于常规编程来说，它们很少会派上用场，但是在涉及性能调优时，它们就大有用武之地了。	

	在Atomic包里一共提供了13个类，可划分为4种类型原子更新方式：
		分别是原子更新基本类型、原子更新数组、原子更新引用和原子更新属性（字段）。 

Java中的13个原子操作类 
	当程序更新一个变量时，如果多线程同时更新这个变量，可能得到期望之外的值，
	比如变量i=1，A线程更新i+1，B线程也更新i+1，经过两个线程操作之后可能i不等于3，而是等于2。
	因为A和B线程在更新变量i的时候拿到的i都是1，这就是线程不安全的更新操作，
	
	通常我们会使 用synchronized来解决这个问题，synchronized会保证多线程不会同时更新变量i
	而Java从JDK 1.5开始提供了java.util.concurrent.atomic包（以下简称Atomic包），
	这个包中 的原子操作类提供了一种用法简单、性能高效、线程安全地更新一个变量的方式。
	
	
	
	
	
原子操作实现原理：
	...
	Atomic包里的类基本都是使用Unsafe实现的包装类