.sleep(ms):
	介绍：
		线程睡眠指定时间后自动苏醒，并返回到可运行状态(不是已经获取到cpu使用权而是要等系统分配)。
		注：
			不释放锁
			线程从运行态进入超时等待状态。
	例：
		TimeUnit.MILLISECONDS.sleep(100);//Java SE5/6-Style 
		或Thread.sleep(100);//Old-Style
	附：
		1. 对sleep()的调用可能抛出InterruptedException异常，所以你要在run()中捕获它。
		附：不能抛出：
			因为异常不能跨线程传播回main（因为run方法无法重写）,所以你必须在本地处理所有在任务内部产生的异常。
		2. sleep(0)作用：
			由于Java采用抢占式的线程调度算法，因此可能会出现某条线程常常获取到CPU控制权的情况。
			为了让某些优先级比较低的线程也能获取到CPU控制权，可以使用Thread.sleep(0)手动触发一次操作系统分配时间片的操作，这也是平衡CPU控制权的一种操作。