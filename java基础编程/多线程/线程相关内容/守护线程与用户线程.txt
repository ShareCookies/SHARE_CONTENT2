守护线程与用户线程:
	在Java中有两类线程：用户线程 (User Thread)、守护线程 (Daemon Thread)。
	用户线程：
		用户线程即创建的普通线程。
		例：
			Thread t=new Thread(new Task());
			t.start();
	守护线程：
		1. Daemon线程是一种支持型线程，因为它主要被用作程序中后台调度以及支持性工作。
		2. 当一个Java虚拟机中不存在非Daemon线程的时候，Java虚拟机将会退出。
			即：用户线程都结束了，jvm就结束。
				例：
					./案例/Daemon/DaemonWithThreadRelation.java
		3. 设置守护线程：	
				Thread daemon=new Thread(new Task());
				//Daemon属性需要在启动线程之前设置，不能在启动线程之后设置。
				daemon.setDaemon(true);//must call before start()
				daemon.start();
				注：
					1. thread.setDaemon(true)必须在thread.start()之前设置，否则会跑出一个IllegalThreadStateException异常。
					即你不能把正在运行的常规线程设置为守护线程。
					2. 在Daemon线程中产生的新线程也是Daemon的。？
			例：
				./案例/Daemon/

			附：
				JVM也提供了很多守护线程，像垃圾收集器线程就是守护线程。
	附：
		1. 最好不要用守护线程去访问固有资源，比如读写操作或者计算逻辑。因为它会在任何时候甚至在一个操作的中间发生中断。
		2. Java自带的多线程框架，比如ExecutorService，会将守护线程转换为用户线程，所以如果要使用后台线程就不能用Java的线程池。
