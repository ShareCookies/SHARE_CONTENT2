https://blog.csdn.net/jbfsdzpp/article/details/45841065

内部类的第一个好处就体现出来了 隐藏你不想让别人知道的操作，也即封装性
	内部类可通过protected和private修饰符来控制访问级别。
	
内部类的第二个好处 一个内部类对象可以访问创建它的外部类对象的内容，甚至包括私有变量！
	非静态内部类对象有着指向其外部类对象的引用
	
	Java编译器在创建内部类对象时，隐式的把其外部类对象的引用也传了进去并一直保存着。
	这样就使得内部类对象始终可以访问其外部类对象，同时这也是为什么在外部类作用范围之外向要创建内部类对象必须先创建其外部类对象的原因？
	
	
局部内部类 
	类定义在一个方法甚至一个代码块之内。

我们在用一个内部类的时候仅需要创建它的一个对象并创给外部，就可以这样做。

if内创建局部内部类
	你不能在if之外创建这个内部类的对象，因为这已经超出了它的作用域。
	超出了这个范围就无效，除此之外它和其他内部类并没有区别。


多继承：
	真正的原因是这样的，java中的内部类和接口加在一起，可以的解决常被C++程序员抱怨java中存在的一个问题 没有多继承。
	实际上，C++的多继承设计起来很复杂，而java通过内部类加上接口，可以很好的实现多继承的效果。
附：
	spring 使用@requestbody 内部类，该内部类要static
	或则？