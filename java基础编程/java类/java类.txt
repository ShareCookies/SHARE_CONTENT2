解释:
	超类(SuperClass) ：
		被继承的类称为超类(SuperClass)，也叫做父类。
	类方法:
		用static修饰，也叫静态方法
	实例方法:
		没有用static修饰，也叫非静态方法

形参为何要为final:?
	简单理解就是，拷贝引用，为了避免引用值发生改变，例如被外部类的方法修改等，而导致内部类得到的值不一致，于是用final来让该引用不可改变。
构造函数：
	https://www.cnblogs.com/zerahmu/p/7662810.html
	子类被初始化的时候，会在构造函数中先调用父类的构造函数。
	注：
		可无需手动调用，java默认使用super();调用父类的无参构造函数。
继承：
	属性继承：
		class First{static int a=3;}
		final class Second extends First{
			void method(){
			System.out.println(a);
			}
		}
		1.System.out.println(a);语句会先去找Second类有没有a变量，没有会在去找它继承的First类的a变量。
			？
				所以如果4写成System.out.println(First.a);会提高解析速度吗
				那么Second对象在内存中存在时它是直接包含了First的属性，还是包含了First属性的链接？
		2.静态属性也可被子类继承。
			附：访问静态属性，最好直接直接使用类名，但使用this也是可以的，只是不推荐，容易在阅读代码过程中产生混淆。

抽象类：
1.：抽象类的使用原则如下： 
	（1）抽象方法必须为public或者protected（因为如果为private，则不能被子类继承，子类便无法实现该方法），缺省情况下默认为public； 
	（2）抽象类不能直接实例化，需要依靠子类采用向上转型的方式处理； 
	（3）抽象类必须有子类，使用extends继承，一个子类只能继承一个抽象类； 
	（4）子类（如果不是抽象类）则必须覆写抽象类之中的全部抽象方法（如果子类没有实现父类的抽象方法，则必须将子类也定义为为abstract类。）；