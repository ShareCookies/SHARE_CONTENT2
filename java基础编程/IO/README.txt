I/O:
	介绍：
		I/O即输入输出。
		各种IO操作通常已经由程序语言实现了，用户仅需使用api等即可。

	从操作对象上对io分类，可划分为：(根据终端类型io大概可以分成以下几类)
		磁盘操作：(文件的操作)
			文本、
			图片、音乐、视频...
		设备的操作：
			键盘、显示器
			摄像头...
		网络通讯:
			Socket
			...
		控制台、内存块、第三方程序:
			...
		
JAVA实现io(输入输出)的方式有2种：
	1. java.io包中的api
		简介：
			JavaIO(api)中使用了流这个抽象概念来操作输入输出。
		详：
			./io/
		
	2. java.nio包中的api
		简介：
			JavaNIO(api)中使用了Channel, Buffer, Selector概念来操作输入输出。
		详：
			./nio/
		
	注：
		流、通道等的使用和获取可通过《JavaIO工具类》。
		JavaIO工具类：
			介绍：
				JavaIO工具类，是语言已经写好的工具，可以帮我们打开对应资源，然后提供流或通道以供我们操作。
			详：
				./JavaIO工具/JavaIO工具.txt
	附：
		为什么javaI/O使用流、装饰者模式来实现io：
			1. 流
				因为存在各种I/O源端和想要与之通信的接收端(文件、控制台、网络链接等)。
				使用流这个抽象概念，就可以让用户仅需通过流类，就是对各种io设备操作，其具体io实现则由底层(厂家、java语言、系统)实现.
			2. 装饰者模式
				确定了I/O源端和接收端后，还可能以多种不同的方式与它们进行通信(顺序、随机存取、缓冲、二进制、按字符、按行、按字等)。
				Java类库的设计者通过创建大量的(装饰器)类来解决这个难题。
		javaI/O与javaNIO区别：
			javaI/O虽然能实现自由组合实现很多功能，但其(对新人)不好理解，因此java后续进新增了nioApi，其更好使用且更易理解。

