？？？
	https://zhuanlan.zhihu.com/p/71742961
	verbose GC log,
	既然是 heap 问题, 那就做了一个 heap dump, 同时做了一个 thread dump. 对 heap dump 使用 MAT 进行分析, 发现大量 io.netty.buffer.PoolThreadCache, 占用了一半多的 heap 空间, 而这些对象实例都是 ThreadLocal 的对象.

《深入理解 Java 虚拟机》《深入理解Java虚拟机：JVM高级特性与最佳实践(第2版)》


通常只要类自己管理内存（如类中有一个Array或List型的结构），那么我们就应该警惕内存泄露的问题。
	因为如果只是单纯把指针移动，那么数组其实还是引用着对象，要把对应的位置赋为null数组才没有引用对象，
	不然你只能期望等这整个栈失去引用（将被GC回收时），栈内的elements数组一起被GC回收。
	例：
		https://www.cnblogs.com/kissazi2/p/3618464.html
？
	jvm日志
	曾有次后台无故挂了，看应用日志打印也没信息.
		看内存是否主够，有可能不够，然后被linux或jvm关了（应该是linux？）。
		那么我应该去看什么来跟踪问题了，jvm日志吗？


linux下java进程内存占用大于Xmx设置，且一直提升：
	https://blog.csdn.net/ghostblade/article/details/88097764?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control
	https://laowan.blog.csdn.net/article/details/113340344
	超出了设置内存后会怎样？
查看堆概要信息：
	1.jmap -heap 19570
		
	2.jhsdb jmap --heap --pid  pid
		JDK9 中新增了 jhsdb 命令
		https://zhibo.blog.csdn.net/article/details/104628583
查看具体内存使用？
	pmap -x pid


jvm优化：
	https://blog.csdn.net/luxiangzhou/article/details/78258296?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&spm=1001.2101.3001.4242
  优化JVM性能涉及很多权衡，当你提升某一项性能指标的时候，往往需要牺牲其他指标。
  比如说，为了最少的消耗内存，往往需要以延迟或者响应时间作为代价。
  或者，你想要提升应用的易管理性，你需要降低应用的的可用性的级别，由于可用性的提升是建立在多个JVM上的，多个JVM可用降低一个JVM出错造成整个应用的无法使用的风险。
  由于有很多的取舍需要做，理解真正性能需求就变得极其重要了，理解需求才能够正确的使用方法。
堆内存不够了会发生什么：
	内存溢出？
	
内存占用
	通常情况下，通过增加Java堆的大小以增加应用内存占用可以提升吞吐量或者减少延迟，或者两者兼具。
	当应用可用的内存减少的时候，吞吐量和延迟通常会受到损失。
