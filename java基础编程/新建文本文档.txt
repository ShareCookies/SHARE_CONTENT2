2.修饰符
	1.0访问修饰符：
		可见修饰符：protected,private,public
		默认修饰符：package（package不是显示的修饰符，它是隐含的，即如果在类、变量等前没加显示的可见性修饰符，那它就是package级别的。所以用package修饰类会报错）
	1.1非访问修饰符：abstract、static、final。
		synchronized 
		transient
		volatile  
			

Java<>:
http://www.importnew.com/24029.html
介绍:<>这叫范型，或者泛型！在集合中频繁出现，主要用来规定你这个集合中出现的数据类型！
例子：一个碗可以装很多种食物，加上范型，比如是面，那么这个碗只能是装上面这类的食物的！
例:TreeSet<Displayer> displayerSet = new TreeSet<Displayer>();//一个二叉树集合，这个集合里的参数只能是Displayer类displayerSet.add(displayer);
//往二叉树集合中插入
应该去看二叉树源码深刻理解下范型???

定义泛型接口:
https://www.cnblogs.com/alsf/p/5697548.html
接口应用泛型，即接口后加<>。
子类实现此接口，要求?
定义泛型类:
介绍:
类应用泛型，则类中属性类型可以用泛型暂代即属性类型，在实际使用时再确认属性的类型。
注:
这样类便可以得到复用，我们可以将泛型替换成任何我们想要的类型。
父类|接口有泛型时:
子类指定泛型具体值:
介绍:
实例化该类时部分地方法只能传字符串参数。
public class WordsDao extends BaseDaoHibImpl<String>
子类不指定泛型具体值:
介绍:
实例化该类后部分在确认泛型实际类型。
public class WordsDao<T> extends BaseDaoHibImpl<T>
泛型方法:
只要在返回类型前面加上一个类似<K, V>的形式就行了。
……
注意点:
1.父类或接口有泛型时，子类可指定泛型具体值，或子类可不指定泛型具体值继续用T来代指约束类。例:public class WordsDao<T> extends BaseDaoHibImpl<T>



GeneralKnowledges:
接口不可以直接实例化。
子类继承父类:
1.子类的访问修饰符要比父类的大，因为如果父类的方法是public修饰，而子类重写后改为private，那么就用父类访问变量指向子类对象时就调用不了共有的方法，这个不符合多态三要素，所以是错的。
2.子类是protect父类为啥也能访问!!!
3.子类初始化的时候会先去调用父类的无参构造函数，所以建议类都写无参构造函数。
4.子类不能和父类有相同方法名、相同参数而不同返回值的方法。即子类不能重载父类方法，子类只能重写父类方法。
5.子类方法与父类相同｛｝花括号中即使为空也算重写。子类方法与父类相同｛super.同方法名();｝即不算重写，是继承父类。
对象：
实例化后的类叫对象
方法：
静态||实例方法的调用:
静态方法属于类最好用类名.静态方法来直接调用
实例方法用对象.实例方法调用。
静态方法：
静态方法不能访问任何实例属性和实例方法。



